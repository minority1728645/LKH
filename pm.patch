diff -Nrup linux-2.6.34.14.org/\ linux-2.6.34.14.bak/\
--- linux-2.6.34.14.org/\	1970-01-01 08:00:00.000000000 +0800
+++ linux-2.6.34.14.bak/\	2013-04-14 13:56:47.162333926 +0800
@@ -0,0 +1,73 @@
+#include <linux/fs.h>
+#include <linux/init.h>
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
+#include <linux/list.h>
+
+extern int ctxsw_s;
+extern int *ctxsw_sched_m;
+extern int *ctxsw_schedtm_m;
+
+static int ctxsw_proc_show(struct seq_file *m, void *v)
+{
+    int i=0;
+    for(i=0;ctxsw_sched_m[i]!=-1;i++){
+	    seq_printf(m, "%x 1\n",ctxsw_sched_m[i]);
+    }
+    for(i=0;ctxsw_schedtm_m[i]!=-1;i++){
+	    seq_printf(m, "%x 2\n",ctxsw_sched_m[i]);
+    }
+	return 0;
+}
+
+static int ctxsw_proc_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, ctxsw_proc_show, NULL);
+}
+
+static const struct file_operations ctxsw_proc_fops = {
+	.open		= ctxsw_proc_open,
+	.read		= seq_read,
+	.llseek		= seq_lseek,
+	.release	= single_release,
+};
+
+static int __init proc_ctxsw_init(void)
+{
+	proc_create("ctxsw", 0, NULL, &ctxsw_proc_fops);
+	return 0;
+}
+
+static int ctxsw_status_proc_show(struct seq_file *m, void *v)
+{
+    if(ctxsw_s==-2){
+	    seq_printf(m, "Not investigating!\n");
+    }
+    else if(ctxsw_s==-1){
+	    seq_printf(m, "Investigating all process!\n");
+    }
+    else{
+	    seq_printf(m, "Investigating process <%d>!\n",ctxsw_s);
+    }
+	return 0;
+}
+
+static int ctxsw_status_proc_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, ctxsw_status_proc_show, NULL);
+}
+
+static const struct file_operations ctxsw_status_proc_fops = {
+	.open		= ctxsw_status_proc_open,
+	.read		= seq_read,
+	.llseek		= seq_lseek,
+	.release	= single_release,
+};
+
+static int __init proc_ctxsw_status_init(void)
+{
+	proc_create("ctxsw_status", 0, NULL, &ctxsw_status_proc_fops);
+	return 0;
+}
+module_init(proc_ctxsw_init);
+module_init(proc_ctxsw_status_init);
diff -Nrup linux-2.6.34.14.org/arch/microblaze/boot/dts/system.dts linux-2.6.34.14.bak/arch/microblaze/boot/dts/system.dts
--- linux-2.6.34.14.org/arch/microblaze/boot/dts/system.dts	2013-01-17 05:55:31.000000000 +0800
+++ linux-2.6.34.14.bak/arch/microblaze/boot/dts/system.dts	1970-01-01 08:00:00.000000000 +0800
@@ -1,364 +0,0 @@
-/*
- * Device Tree Generator version: 1.1
- *
- * (C) Copyright 2007-2008 Xilinx, Inc.
- * (C) Copyright 2007-2009 Michal Simek
- *
- * Michal SIMEK <monstr@monstr.eu>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- * MA 02111-1307 USA
- *
- * CAUTION: This file is automatically generated by libgen.
- * Version: Xilinx EDK 10.1.03 EDK_K_SP3.6
- *
- * XPS project directory: Xilinx-ML505-ll_temac-sgdma-MMU-FDT-edk101
- */
-
-/dts-v1/;
-/ {
-	#address-cells = <1>;
-	#size-cells = <1>;
-	compatible = "xlnx,microblaze";
-	hard-reset-gpios = <&LEDs_8Bit 2 1>;
-	model = "testing";
-	DDR2_SDRAM: memory@90000000 {
-		device_type = "memory";
-		reg = < 0x90000000 0x10000000 >;
-	} ;
-	aliases {
-		ethernet0 = &Hard_Ethernet_MAC;
-		serial0 = &RS232_Uart_1;
-	} ;
-	chosen {
-		bootargs = "console=ttyUL0,115200 highres=on";
-		linux,stdout-path = "/plb@0/serial@84000000";
-	} ;
-	cpus {
-		#address-cells = <1>;
-		#cpus = <0x1>;
-		#size-cells = <0>;
-		microblaze_0: cpu@0 {
-			clock-frequency = <125000000>;
-			compatible = "xlnx,microblaze-7.10.d";
-			d-cache-baseaddr = <0x90000000>;
-			d-cache-highaddr = <0x9fffffff>;
-			d-cache-line-size = <0x10>;
-			d-cache-size = <0x2000>;
-			device_type = "cpu";
-			i-cache-baseaddr = <0x90000000>;
-			i-cache-highaddr = <0x9fffffff>;
-			i-cache-line-size = <0x10>;
-			i-cache-size = <0x2000>;
-			model = "microblaze,7.10.d";
-			reg = <0>;
-			timebase-frequency = <125000000>;
-			xlnx,addr-tag-bits = <0xf>;
-			xlnx,allow-dcache-wr = <0x1>;
-			xlnx,allow-icache-wr = <0x1>;
-			xlnx,area-optimized = <0x0>;
-			xlnx,cache-byte-size = <0x2000>;
-			xlnx,d-lmb = <0x1>;
-			xlnx,d-opb = <0x0>;
-			xlnx,d-plb = <0x1>;
-			xlnx,data-size = <0x20>;
-			xlnx,dcache-addr-tag = <0xf>;
-			xlnx,dcache-always-used = <0x1>;
-			xlnx,dcache-byte-size = <0x2000>;
-			xlnx,dcache-line-len = <0x4>;
-			xlnx,dcache-use-fsl = <0x1>;
-			xlnx,debug-enabled = <0x1>;
-			xlnx,div-zero-exception = <0x1>;
-			xlnx,dopb-bus-exception = <0x0>;
-			xlnx,dynamic-bus-sizing = <0x1>;
-			xlnx,edge-is-positive = <0x1>;
-			xlnx,family = "virtex5";
-			xlnx,fpu-exception = <0x1>;
-			xlnx,fsl-data-size = <0x20>;
-			xlnx,fsl-exception = <0x0>;
-			xlnx,fsl-links = <0x0>;
-			xlnx,i-lmb = <0x1>;
-			xlnx,i-opb = <0x0>;
-			xlnx,i-plb = <0x1>;
-			xlnx,icache-always-used = <0x1>;
-			xlnx,icache-line-len = <0x4>;
-			xlnx,icache-use-fsl = <0x1>;
-			xlnx,ill-opcode-exception = <0x1>;
-			xlnx,instance = "microblaze_0";
-			xlnx,interconnect = <0x1>;
-			xlnx,interrupt-is-edge = <0x0>;
-			xlnx,iopb-bus-exception = <0x0>;
-			xlnx,mmu-dtlb-size = <0x4>;
-			xlnx,mmu-itlb-size = <0x2>;
-			xlnx,mmu-tlb-access = <0x3>;
-			xlnx,mmu-zones = <0x10>;
-			xlnx,number-of-pc-brk = <0x1>;
-			xlnx,number-of-rd-addr-brk = <0x0>;
-			xlnx,number-of-wr-addr-brk = <0x0>;
-			xlnx,opcode-0x0-illegal = <0x1>;
-			xlnx,pvr = <0x2>;
-			xlnx,pvr-user1 = <0x0>;
-			xlnx,pvr-user2 = <0x0>;
-			xlnx,reset-msr = <0x0>;
-			xlnx,sco = <0x0>;
-			xlnx,unaligned-exceptions = <0x1>;
-			xlnx,use-barrel = <0x1>;
-			xlnx,use-dcache = <0x1>;
-			xlnx,use-div = <0x1>;
-			xlnx,use-ext-brk = <0x1>;
-			xlnx,use-ext-nm-brk = <0x1>;
-			xlnx,use-extended-fsl-instr = <0x0>;
-			xlnx,use-fpu = <0x2>;
-			xlnx,use-hw-mul = <0x2>;
-			xlnx,use-icache = <0x1>;
-			xlnx,use-interrupt = <0x1>;
-			xlnx,use-mmu = <0x3>;
-			xlnx,use-msr-instr = <0x1>;
-			xlnx,use-pcmp-instr = <0x1>;
-		} ;
-	} ;
-	mb_plb: plb@0 {
-		#address-cells = <1>;
-		#size-cells = <1>;
-		compatible = "xlnx,plb-v46-1.03.a", "xlnx,plb-v46-1.00.a", "simple-bus";
-		ranges ;
-		FLASH: flash@a0000000 {
-			bank-width = <2>;
-			compatible = "xlnx,xps-mch-emc-2.00.a", "cfi-flash";
-			reg = < 0xa0000000 0x2000000 >;
-			xlnx,family = "virtex5";
-			xlnx,include-datawidth-matching-0 = <0x1>;
-			xlnx,include-datawidth-matching-1 = <0x0>;
-			xlnx,include-datawidth-matching-2 = <0x0>;
-			xlnx,include-datawidth-matching-3 = <0x0>;
-			xlnx,include-negedge-ioregs = <0x0>;
-			xlnx,include-plb-ipif = <0x1>;
-			xlnx,include-wrbuf = <0x1>;
-			xlnx,max-mem-width = <0x10>;
-			xlnx,mch-native-dwidth = <0x20>;
-			xlnx,mch-plb-clk-period-ps = <0x1f40>;
-			xlnx,mch-splb-awidth = <0x20>;
-			xlnx,mch0-accessbuf-depth = <0x10>;
-			xlnx,mch0-protocol = <0x0>;
-			xlnx,mch0-rddatabuf-depth = <0x10>;
-			xlnx,mch1-accessbuf-depth = <0x10>;
-			xlnx,mch1-protocol = <0x0>;
-			xlnx,mch1-rddatabuf-depth = <0x10>;
-			xlnx,mch2-accessbuf-depth = <0x10>;
-			xlnx,mch2-protocol = <0x0>;
-			xlnx,mch2-rddatabuf-depth = <0x10>;
-			xlnx,mch3-accessbuf-depth = <0x10>;
-			xlnx,mch3-protocol = <0x0>;
-			xlnx,mch3-rddatabuf-depth = <0x10>;
-			xlnx,mem0-width = <0x10>;
-			xlnx,mem1-width = <0x20>;
-			xlnx,mem2-width = <0x20>;
-			xlnx,mem3-width = <0x20>;
-			xlnx,num-banks-mem = <0x1>;
-			xlnx,num-channels = <0x0>;
-			xlnx,priority-mode = <0x0>;
-			xlnx,synch-mem-0 = <0x0>;
-			xlnx,synch-mem-1 = <0x0>;
-			xlnx,synch-mem-2 = <0x0>;
-			xlnx,synch-mem-3 = <0x0>;
-			xlnx,synch-pipedelay-0 = <0x2>;
-			xlnx,synch-pipedelay-1 = <0x2>;
-			xlnx,synch-pipedelay-2 = <0x2>;
-			xlnx,synch-pipedelay-3 = <0x2>;
-			xlnx,tavdv-ps-mem-0 = <0x1adb0>;
-			xlnx,tavdv-ps-mem-1 = <0x3a98>;
-			xlnx,tavdv-ps-mem-2 = <0x3a98>;
-			xlnx,tavdv-ps-mem-3 = <0x3a98>;
-			xlnx,tcedv-ps-mem-0 = <0x1adb0>;
-			xlnx,tcedv-ps-mem-1 = <0x3a98>;
-			xlnx,tcedv-ps-mem-2 = <0x3a98>;
-			xlnx,tcedv-ps-mem-3 = <0x3a98>;
-			xlnx,thzce-ps-mem-0 = <0x88b8>;
-			xlnx,thzce-ps-mem-1 = <0x1b58>;
-			xlnx,thzce-ps-mem-2 = <0x1b58>;
-			xlnx,thzce-ps-mem-3 = <0x1b58>;
-			xlnx,thzoe-ps-mem-0 = <0x1b58>;
-			xlnx,thzoe-ps-mem-1 = <0x1b58>;
-			xlnx,thzoe-ps-mem-2 = <0x1b58>;
-			xlnx,thzoe-ps-mem-3 = <0x1b58>;
-			xlnx,tlzwe-ps-mem-0 = <0x88b8>;
-			xlnx,tlzwe-ps-mem-1 = <0x0>;
-			xlnx,tlzwe-ps-mem-2 = <0x0>;
-			xlnx,tlzwe-ps-mem-3 = <0x0>;
-			xlnx,twc-ps-mem-0 = <0x2af8>;
-			xlnx,twc-ps-mem-1 = <0x3a98>;
-			xlnx,twc-ps-mem-2 = <0x3a98>;
-			xlnx,twc-ps-mem-3 = <0x3a98>;
-			xlnx,twp-ps-mem-0 = <0x11170>;
-			xlnx,twp-ps-mem-1 = <0x2ee0>;
-			xlnx,twp-ps-mem-2 = <0x2ee0>;
-			xlnx,twp-ps-mem-3 = <0x2ee0>;
-			xlnx,xcl0-linesize = <0x4>;
-			xlnx,xcl0-writexfer = <0x1>;
-			xlnx,xcl1-linesize = <0x4>;
-			xlnx,xcl1-writexfer = <0x1>;
-			xlnx,xcl2-linesize = <0x4>;
-			xlnx,xcl2-writexfer = <0x1>;
-			xlnx,xcl3-linesize = <0x4>;
-			xlnx,xcl3-writexfer = <0x1>;
-		} ;
-		Hard_Ethernet_MAC: xps-ll-temac@81c00000 {
-			#address-cells = <1>;
-			#size-cells = <1>;
-			compatible = "xlnx,compound";
-			ethernet@81c00000 {
-				compatible = "xlnx,xps-ll-temac-1.01.b", "xlnx,xps-ll-temac-1.00.a";
-				device_type = "network";
-				interrupt-parent = <&xps_intc_0>;
-				interrupts = < 5 2 >;
-				llink-connected = <&PIM3>;
-				local-mac-address = [ 00 0a 35 00 00 00 ];
-				reg = < 0x81c00000 0x40 >;
-				xlnx,bus2core-clk-ratio = <0x1>;
-				xlnx,phy-type = <0x1>;
-				xlnx,phyaddr = <0x1>;
-				xlnx,rxcsum = <0x0>;
-				xlnx,rxfifo = <0x1000>;
-				xlnx,temac-type = <0x0>;
-				xlnx,txcsum = <0x0>;
-				xlnx,txfifo = <0x1000>;
-			} ;
-		} ;
-		IIC_EEPROM: i2c@81600000 {
-			compatible = "xlnx,xps-iic-2.00.a";
-			interrupt-parent = <&xps_intc_0>;
-			interrupts = < 6 2 >;
-			reg = < 0x81600000 0x10000 >;
-			xlnx,clk-freq = <0x7735940>;
-			xlnx,family = "virtex5";
-			xlnx,gpo-width = <0x1>;
-			xlnx,iic-freq = <0x186a0>;
-			xlnx,scl-inertial-delay = <0x0>;
-			xlnx,sda-inertial-delay = <0x0>;
-			xlnx,ten-bit-adr = <0x0>;
-		} ;
-		LEDs_8Bit: gpio@81400000 {
-			compatible = "xlnx,xps-gpio-1.00.a";
-			interrupt-parent = <&xps_intc_0>;
-			interrupts = < 7 2 >;
-			reg = < 0x81400000 0x10000 >;
-			xlnx,all-inputs = <0x0>;
-			xlnx,all-inputs-2 = <0x0>;
-			xlnx,dout-default = <0x0>;
-			xlnx,dout-default-2 = <0x0>;
-			xlnx,family = "virtex5";
-			xlnx,gpio-width = <0x8>;
-			xlnx,interrupt-present = <0x1>;
-			xlnx,is-bidir = <0x1>;
-			xlnx,is-bidir-2 = <0x1>;
-			xlnx,is-dual = <0x0>;
-			xlnx,tri-default = <0xffffffff>;
-			xlnx,tri-default-2 = <0xffffffff>;
-			#gpio-cells = <2>;
-			gpio-controller;
-		} ;
-
-		gpio-leds {
-			compatible = "gpio-leds";
-
-			heartbeat {
-				label = "Heartbeat";
-				gpios = <&LEDs_8Bit 4 1>;
-				linux,default-trigger = "heartbeat";
-			};
-
-			yellow {
-				label = "Yellow";
-				gpios = <&LEDs_8Bit 5 1>;
-			};
-
-			red {
-				label = "Red";
-				gpios = <&LEDs_8Bit 6 1>;
-			};
-
-			green {
-				label = "Green";
-				gpios = <&LEDs_8Bit 7 1>;
-			};
-		} ;
-		RS232_Uart_1: serial@84000000 {
-			clock-frequency = <125000000>;
-			compatible = "xlnx,xps-uartlite-1.00.a";
-			current-speed = <115200>;
-			device_type = "serial";
-			interrupt-parent = <&xps_intc_0>;
-			interrupts = < 8 0 >;
-			port-number = <0>;
-			reg = < 0x84000000 0x10000 >;
-			xlnx,baudrate = <0x1c200>;
-			xlnx,data-bits = <0x8>;
-			xlnx,family = "virtex5";
-			xlnx,odd-parity = <0x0>;
-			xlnx,use-parity = <0x0>;
-		} ;
-		SysACE_CompactFlash: sysace@83600000 {
-			compatible = "xlnx,xps-sysace-1.00.a";
-			interrupt-parent = <&xps_intc_0>;
-			interrupts = < 4 2 >;
-			reg = < 0x83600000 0x10000 >;
-			xlnx,family = "virtex5";
-			xlnx,mem-width = <0x10>;
-		} ;
-		debug_module: debug@84400000 {
-			compatible = "xlnx,mdm-1.00.d";
-			reg = < 0x84400000 0x10000 >;
-			xlnx,family = "virtex5";
-			xlnx,interconnect = <0x1>;
-			xlnx,jtag-chain = <0x2>;
-			xlnx,mb-dbg-ports = <0x1>;
-			xlnx,uart-width = <0x8>;
-			xlnx,use-uart = <0x1>;
-			xlnx,write-fsl-ports = <0x0>;
-		} ;
-		mpmc@90000000 {
-			#address-cells = <1>;
-			#size-cells = <1>;
-			compatible = "xlnx,mpmc-4.02.a";
-			PIM3: sdma@84600180 {
-				compatible = "xlnx,ll-dma-1.00.a";
-				interrupt-parent = <&xps_intc_0>;
-				interrupts = < 2 2 1 2 >;
-				reg = < 0x84600180 0x80 >;
-			} ;
-		} ;
-		xps_intc_0: interrupt-controller@81800000 {
-			#interrupt-cells = <0x2>;
-			compatible = "xlnx,xps-intc-1.00.a";
-			interrupt-controller ;
-			reg = < 0x81800000 0x10000 >;
-			xlnx,kind-of-intr = <0x100>;
-			xlnx,num-intr-inputs = <0x9>;
-		} ;
-		xps_timer_1: timer@83c00000 {
-			compatible = "xlnx,xps-timer-1.00.a";
-			interrupt-parent = <&xps_intc_0>;
-			interrupts = < 3 2 >;
-			reg = < 0x83c00000 0x10000 >;
-			xlnx,count-width = <0x20>;
-			xlnx,family = "virtex5";
-			xlnx,gen0-assert = <0x1>;
-			xlnx,gen1-assert = <0x1>;
-			xlnx,one-timer-only = <0x0>;
-			xlnx,trig0-assert = <0x1>;
-			xlnx,trig1-assert = <0x1>;
-		} ;
-	} ;
-}  ;
diff -Nrup linux-2.6.34.14.org/fs/proc/Makefile linux-2.6.34.14.bak/fs/proc/Makefile
--- linux-2.6.34.14.org/fs/proc/Makefile	2013-01-17 05:55:31.000000000 +0800
+++ linux-2.6.34.14.bak/fs/proc/Makefile	2013-04-14 13:58:55.580076533 +0800
@@ -10,6 +10,7 @@ proc-$(CONFIG_MMU)	:= mmu.o task_mmu.o
 proc-y       += inode.o root.o base.o generic.o array.o \
 		proc_tty.o
 proc-y	+= cmdline.o
+proc-y	+= ctxsw.o
 proc-y	+= cpuinfo.o
 proc-y	+= devices.o
 proc-y	+= interrupts.o
diff -Nrup linux-2.6.34.14.org/fs/proc/base.c linux-2.6.34.14.bak/fs/proc/base.c
--- linux-2.6.34.14.org/fs/proc/base.c	2013-01-17 05:55:31.000000000 +0800
+++ linux-2.6.34.14.bak/fs/proc/base.c	2013-04-14 13:58:54.419083324 +0800
@@ -500,6 +500,10 @@ static const struct limit_names lnames[R
 	[RLIMIT_RTPRIO] = {"Max realtime priority", NULL},
 	[RLIMIT_RTTIME] = {"Max realtime timeout", "us"},
 };
+static int proc_pid_ctx(struct task_struct *task, char *buffer)
+{
+	return sprintf(buffer, "ctx:%d \n",task->ctx);
+}
 
 /* Display limits for a process */
 static int proc_pid_limits(struct task_struct *task, char *buffer)
@@ -2614,6 +2618,7 @@ static const struct pid_entry tgid_base_
 	ONE("status",     S_IRUGO, proc_pid_status),
 	ONE("personality", S_IRUGO, proc_pid_personality),
 	INF("limits",	  S_IRUSR, proc_pid_limits),
+	INF("ctx",	  S_IRUSR, proc_pid_ctx),
 #ifdef CONFIG_SCHED_DEBUG
 	REG("sched",      S_IRUGO|S_IWUSR, proc_pid_sched_operations),
 #endif
@@ -2954,6 +2959,7 @@ static const struct pid_entry tid_base_s
 	ONE("status",    S_IRUGO, proc_pid_status),
 	ONE("personality", S_IRUGO, proc_pid_personality),
 	INF("limits",	 S_IRUSR, proc_pid_limits),
+	INF("ctx",	 S_IRUSR, proc_pid_ctx),
 #ifdef CONFIG_SCHED_DEBUG
 	REG("sched",     S_IRUGO|S_IWUSR, proc_pid_sched_operations),
 #endif
diff -Nrup linux-2.6.34.14.org/fs/proc/ctxsw.c linux-2.6.34.14.bak/fs/proc/ctxsw.c
--- linux-2.6.34.14.org/fs/proc/ctxsw.c	1970-01-01 08:00:00.000000000 +0800
+++ linux-2.6.34.14.bak/fs/proc/ctxsw.c	2013-04-14 13:58:55.637075507 +0800
@@ -0,0 +1,108 @@
+#include <linux/fs.h>
+#include <linux/init.h>
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
+#include <linux/list.h>
+
+#include <asm/uaccess.h>
+
+extern int ctxsw_s;
+extern int *ctxsw_sched_m;
+extern int *ctxsw_schedtm_m;
+extern int ctxsw_sched_c;
+extern int ctxsw_schedtm_c;
+extern void schedule(void);
+extern signed long schedule_timeout(signed long timeout);
+
+static int ctxsw_proc_show(struct seq_file *m, void *v)
+{
+    int i=0;
+	seq_printf(m, "caller\tcallee\n");
+    for(i=0;i<ctxsw_sched_c;i++){
+	    seq_printf(m, "%x\t%x\n",ctxsw_sched_m[i],schedule);
+    }
+    for(i=0;i<ctxsw_schedtm_c;i++){
+	    seq_printf(m, "%x\t%x\n",ctxsw_schedtm_m[i],schedule_timeout);
+    }
+	return 0;
+}
+
+static int ctxsw_proc_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, ctxsw_proc_show, NULL);
+}
+
+static int ctxsw_proc_write(struct file *file, const char __user *buffer,size_t count, loff_t *lof){
+    char ctxsw_cmd[1024];
+    if(!copy_from_user(ctxsw_cmd,buffer,count)){
+        ctxsw_cmd[count]='\0';
+        if(ctxsw_cmd[0]=='r'){
+            ctxsw_sched_c=0;
+            ctxsw_schedtm_c=0;
+            ctxsw_s=-2;
+        }
+        else if(ctxsw_cmd[0]=='0'){
+            ctxsw_s=-2;
+        }
+        else if(ctxsw_cmd[0]=='1'){
+            if(count<=7){
+                ctxsw_s=-1;
+            }
+            else{
+                int p;
+                if(0<sscanf(ctxsw_cmd,"1 pid=%d",&p)){
+                    ctxsw_s=p;
+                }
+            }
+        }
+    }
+    return 5;
+}
+
+static const struct file_operations ctxsw_proc_fops = {
+	.open		= ctxsw_proc_open,
+	.read		= seq_read,
+    .write      = ctxsw_proc_write,
+	.llseek		= seq_lseek,
+	.release	= single_release,
+};
+
+static int __init proc_ctxsw_init(void)
+{
+	proc_create("ctxsw", 0, NULL, &ctxsw_proc_fops);
+	return 0;
+}
+
+static int ctxsw_status_proc_show(struct seq_file *m, void *v)
+{
+    if(ctxsw_s==-2){
+	    seq_printf(m, "Not investigating!\n");
+    }
+    else if(ctxsw_s==-1){
+	    seq_printf(m, "Investigating all process!\n");
+    }
+    else{
+	    seq_printf(m, "Investigating process <%d>!\n",ctxsw_s);
+    }
+	return 0;
+}
+
+static int ctxsw_status_proc_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, ctxsw_status_proc_show, NULL);
+}
+
+static const struct file_operations ctxsw_status_proc_fops = {
+	.open		= ctxsw_status_proc_open,
+	.read		= seq_read,
+	.llseek		= seq_lseek,
+	.release	= single_release,
+};
+
+static int __init proc_ctxsw_status_init(void)
+{
+	proc_create("ctxsw_status", 0, NULL, &ctxsw_status_proc_fops);
+	return 0;
+}
+module_init(proc_ctxsw_init);
+module_init(proc_ctxsw_status_init);
diff -Nrup linux-2.6.34.14.org/include/linux/sched.h linux-2.6.34.14.bak/include/linux/sched.h
--- linux-2.6.34.14.org/include/linux/sched.h	2013-01-17 05:55:31.000000000 +0800
+++ linux-2.6.34.14.bak/include/linux/sched.h	2013-04-14 13:56:42.957100006 +0800
@@ -1170,6 +1170,7 @@ struct sched_rt_entity {
 struct rcu_node;
 
 struct task_struct {
+    int ctx;
 	volatile long state;	/* -1 unrunnable, 0 runnable, >0 stopped */
 	void *stack;
 	atomic_t usage;
diff -Nrup linux-2.6.34.14.org/init/main.c linux-2.6.34.14.bak/init/main.c
--- linux-2.6.34.14.org/init/main.c	2013-01-17 05:55:31.000000000 +0800
+++ linux-2.6.34.14.bak/init/main.c	2013-04-14 13:59:18.177089761 +0800
@@ -69,6 +69,7 @@
 #include <linux/sfi.h>
 #include <linux/shmem_fs.h>
 #include <linux/slab.h>
+#include <linux/init.h>
 #include <trace/boot.h>
 
 #include <asm/io.h>
@@ -112,6 +113,12 @@ extern void time_init(void);
 void (*__initdata late_time_init)(void);
 extern void softirq_init(void);
 
+int ctxsw_s;
+int *ctxsw_sched_m;
+int *ctxsw_schedtm_m;
+int ctxsw_sched_c;
+int ctxsw_schedtm_c;
+
 /* Untouched command line saved by arch-specific code. */
 char __initdata boot_command_line[COMMAND_LINE_SIZE];
 /* Untouched saved command line (eg. for /proc) */
@@ -533,6 +540,14 @@ static void __init mm_init(void)
 	vmalloc_init();
 }
 
+static void ctxsw_init(void){
+    ctxsw_s=-2;
+    ctxsw_sched_m=(int*)alloc_bootmem(2048);
+    ctxsw_schedtm_m=(int*)alloc_bootmem(2048);
+    ctxsw_sched_c=0;
+    ctxsw_schedtm_c=0;
+}
+
 asmlinkage void __init start_kernel(void)
 {
 	char * command_line;
@@ -577,6 +592,8 @@ asmlinkage void __init start_kernel(void
 	build_all_zonelists();
 	page_alloc_init();
 
+    ctxsw_init();
+
 	printk(KERN_NOTICE "Kernel command line: %s\n", boot_command_line);
 	parse_early_param();
 	parse_args("Booting kernel", static_command_line, __start___param,
diff -Nrup linux-2.6.34.14.org/kernel/fork.c linux-2.6.34.14.bak/kernel/fork.c
--- linux-2.6.34.14.org/kernel/fork.c	2013-01-17 05:55:31.000000000 +0800
+++ linux-2.6.34.14.bak/kernel/fork.c	2013-04-14 13:57:40.331115556 +0800
@@ -276,6 +276,7 @@ static struct task_struct *dup_task_stru
 
 	account_kernel_stack(ti, 1);
 
+    tsk->ctx=0;
 	return tsk;
 
 out:
diff -Nrup linux-2.6.34.14.org/kernel/sched.c linux-2.6.34.14.bak/kernel/sched.c
--- linux-2.6.34.14.org/kernel/sched.c	2013-01-17 05:55:31.000000000 +0800
+++ linux-2.6.34.14.bak/kernel/sched.c	2013-04-14 13:57:40.363096212 +0800
@@ -120,6 +120,12 @@
  */
 #define RUNTIME_INF	((u64)~0ULL)
 
+extern int ctxsw_s;
+extern int *ctxsw_sched_m;
+extern int *ctxsw_schedtm_m;
+extern int ctxsw_sched_c;
+extern int ctxsw_schedtm_c;
+
 static inline int rt_policy(int policy)
 {
 	if (unlikely(policy == SCHED_FIFO || policy == SCHED_RR))
@@ -3709,6 +3715,17 @@ need_resched_nonpreemptible:
 	put_prev_task(rq, prev);
 	next = pick_next_task(rq);
 
+
+    if(ctxsw_s==-1){
+        ctxsw_sched_m[ctxsw_sched_c++]=(int)__builtin_return_address(0);
+    }
+    else if(ctxsw_s>=0){
+        printk("prev:%d\n",current->pid);
+        if(ctxsw_s==current->pid){
+            ctxsw_sched_m[ctxsw_sched_c++]=(int)__builtin_return_address(0);
+        }
+    }
+
 	if (likely(prev != next)) {
 		sched_info_switch(prev, next);
 		perf_event_task_sched_out(prev, next);
@@ -3717,6 +3734,8 @@ need_resched_nonpreemptible:
 		rq->curr = next;
 		++*switch_count;
 
+        next->ctx++;
+
 		context_switch(rq, prev, next); /* unlocks the rq */
 		/*
 		 * the context switch might have flipped the stack from under
diff -Nrup linux-2.6.34.14.org/kernel/timer.c linux-2.6.34.14.bak/kernel/timer.c
--- linux-2.6.34.14.org/kernel/timer.c	2013-01-17 05:55:31.000000000 +0800
+++ linux-2.6.34.14.bak/kernel/timer.c	2013-04-14 13:57:38.136240368 +0800
@@ -64,6 +64,12 @@ EXPORT_SYMBOL(jiffies_64);
 #define TVN_MASK (TVN_SIZE - 1)
 #define TVR_MASK (TVR_SIZE - 1)
 
+extern int ctxsw_s;
+extern int *ctxsw_sched_m;
+extern int *ctxsw_schedtm_m;
+extern int ctxsw_sched_c;
+extern int ctxsw_schedtm_c;
+
 struct tvec {
 	struct list_head vec[TVN_SIZE];
 };
@@ -1360,6 +1366,16 @@ signed long __sched schedule_timeout(sig
 	struct timer_list timer;
 	unsigned long expire;
 
+    if(ctxsw_s==-1){
+        ctxsw_schedtm_m[ctxsw_schedtm_c]=(int)__builtin_frame_address(0);
+    }
+    else if(ctxsw_s>=0){
+        printk("current:%d\n",current->pid);
+        if(ctxsw_s==current->pid){
+            ctxsw_schedtm_m[ctxsw_schedtm_c]=(int)__builtin_frame_address(0);
+        }
+    }
+
 	switch (timeout)
 	{
 	case MAX_SCHEDULE_TIMEOUT:
diff -Nrup linux-2.6.34.14.org/mvbz.sh linux-2.6.34.14.bak/mvbz.sh
--- linux-2.6.34.14.org/mvbz.sh	1970-01-01 08:00:00.000000000 +0800
+++ linux-2.6.34.14.bak/mvbz.sh	2013-04-14 13:57:45.951188862 +0800
@@ -0,0 +1 @@
+cp arch/x86/boot/bzImage /boot/vmlinuz-2.6.34.14
